// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Venta.AccesoDatos;

namespace Venta.AccesoDatos.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Venta.Modelo.Bodega", b =>
                {
                    b.Property<int>("BodegaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("NombreSeccion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BodegaId");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Bodegas");
                });

            modelBuilder.Entity("Venta.Modelo.BodegaProductoElectrodomestico", b =>
                {
                    b.Property<int>("BodegaProductoElectrodomesticoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BodegaId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoElectrodomesticoId")
                        .HasColumnType("int");

                    b.HasKey("BodegaProductoElectrodomesticoId");

                    b.HasIndex("BodegaId");

                    b.HasIndex("ProductoElectrodomesticoId");

                    b.ToTable("BodegaDeElectrodomesticos");
                });

            modelBuilder.Entity("Venta.Modelo.BodegaProductoTecnologico", b =>
                {
                    b.Property<int>("BodegaProductoTecnologicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BodegaId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoTecnologicoId")
                        .HasColumnType("int");

                    b.HasKey("BodegaProductoTecnologicoId");

                    b.HasIndex("BodegaId");

                    b.HasIndex("ProductoTecnologicoId");

                    b.ToTable("BodegaDeTecnologia");
                });

            modelBuilder.Entity("Venta.Modelo.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CedulaIdentidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Edad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClienteId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Venta.Modelo.ClienteProductoElectrodomestico", b =>
                {
                    b.Property<int>("ClienteProductoElectrodomesticoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoElectrodomesticoId")
                        .HasColumnType("int");

                    b.HasKey("ClienteProductoElectrodomesticoId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ProductoElectrodomesticoId");

                    b.ToTable("ClienteConElectrodomesticos");
                });

            modelBuilder.Entity("Venta.Modelo.ClienteProductoTecnologico", b =>
                {
                    b.Property<int>("ClienteProductoTecnologicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoTecnologicoId")
                        .HasColumnType("int");

                    b.HasKey("ClienteProductoTecnologicoId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ProductoTecnologicoId");

                    b.ToTable("ClienteConAparatoTecnologico");
                });

            modelBuilder.Entity("Venta.Modelo.Empresa", b =>
                {
                    b.Property<int>("EmpresaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionEmpresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmpresaId");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("Venta.Modelo.ProductoElectrodomestico", b =>
                {
                    b.Property<int>("ProductoElectrodomesticoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConsumoElectrico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Costo")
                        .HasColumnType("real");

                    b.Property<string>("Marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Medidas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductoElectrodomesticoId");

                    b.ToTable("Electrodomesticos");
                });

            modelBuilder.Entity("Venta.Modelo.ProductoTecnologico", b =>
                {
                    b.Property<int>("ProductoTecnologicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Almacenamiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Costo")
                        .HasColumnType("real");

                    b.Property<string>("Marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Medidas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemoryRam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoSoftware")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductoTecnologicoId");

                    b.ToTable("AparatosTecnologicos");
                });

            modelBuilder.Entity("Venta.Modelo.Bodega", b =>
                {
                    b.HasOne("Venta.Modelo.Empresa", "Empresa")
                        .WithMany("Bodega")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Venta.Modelo.BodegaProductoElectrodomestico", b =>
                {
                    b.HasOne("Venta.Modelo.Bodega", "Bodega")
                        .WithMany("BodegaProductoElectrodomestico")
                        .HasForeignKey("BodegaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Venta.Modelo.ProductoElectrodomestico", "ProductoElectrodomestico")
                        .WithMany("BodegaProductoElectrodomestico")
                        .HasForeignKey("ProductoElectrodomesticoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Venta.Modelo.BodegaProductoTecnologico", b =>
                {
                    b.HasOne("Venta.Modelo.Bodega", "Bodega")
                        .WithMany("BodegaProductoTecnologico")
                        .HasForeignKey("BodegaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Venta.Modelo.ProductoTecnologico", "ProductoTecnologico")
                        .WithMany("BodegaProductoTecnologico")
                        .HasForeignKey("ProductoTecnologicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Venta.Modelo.ClienteProductoElectrodomestico", b =>
                {
                    b.HasOne("Venta.Modelo.Cliente", "Cliente")
                        .WithMany("ClienteProductoElectrodomestico")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Venta.Modelo.ProductoElectrodomestico", "ProductoElectrodomestico")
                        .WithMany()
                        .HasForeignKey("ProductoElectrodomesticoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Venta.Modelo.ClienteProductoTecnologico", b =>
                {
                    b.HasOne("Venta.Modelo.Cliente", "Cliente")
                        .WithMany("ClienteProductoTecnologico")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Venta.Modelo.ProductoTecnologico", "ProductoTecnologico")
                        .WithMany()
                        .HasForeignKey("ProductoTecnologicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
